        -:    0:Source:unittest4.c
        -:    0:Programs:7
        -:    1:#include "dominion.h"
        -:    2:#include "rngs.h"
        -:    3:#include <stdlib.h>
        -:    4:#include <stdio.h>
        -:    5:#include "assert.h"
        -:    6:
        -:    7:
function main called 2 returned 100% blocks executed 73%
        2:    8:int main(){
        -:    9:	
        -:   10:	struct gameState G;
        -:   11:
        2:   12:	int m = 0;
        2:   13:	int k[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        2:   14:	int seed = 50;
        -:   15:
        2:   16:	initializeGame(2, k, seed, &G);
call    0 returned 100%
        -:   17:
        2:   18:	G.coins = 0;
        -:   19:
        2:   20:	m = buyCard(1, &G);
call    0 returned 100%
        -:   21:
        2:   22:	assert(m == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   23:
        2:   24:	G.coins = 9;
        -:   25:
        2:   26:	G.numBuys = 0;
        -:   27:
        2:   28:	m = buyCard(1, &G);
call    0 returned 100%
        -:   29:
        2:   30:	assert(m == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   31:
        2:   32:	G.numBuys = 2;
        -:   33:
        2:   34:	m = buyCard(3, &G);
call    0 returned 100%
        -:   35:
        2:   36:	assert(m == 0);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   37:
        2:   38:	m = buyCard(3, &G);
call    0 returned 100%
        -:   39:
        2:   40:	assert(m == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   41:
        2:   42:	G.coins = 10;
        -:   43:
        2:   44:	m = buyCard(1, &G);
call    0 returned 100%
        -:   45:
        2:   46:	assert(m == 0);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   47:
        2:   48:	m = buyCard(1, &G);
call    0 returned 100%
        -:   49:
        2:   50:	assert(m == -1);	
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   51:
        2:   52:	printf("buyCard Test Completed.\n");
call    0 returned 100%
        2:   53:	return 0;
        -:   54:}
